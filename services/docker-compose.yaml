services:
  nginx:
    container_name: nginx
    image: nginx:latest
    #network_mode: "host"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:z
      - ./nginx/conf.d:/etc/nginx/conf.d:z
      - ./nginx/ssl:/etc/nginx/ssl:z
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "nginx|{{.Name}}|{{.ID}}"
    restart: always


  db:
    container_name: db
    image: postgres:17.2
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:z
      - pg-events-data:/var/lib/postgresql/data:z
    ports:
      - "5432:5432"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "db|{{.Name}}|{{.ID}}"
    restart: always

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "3333:8080"
    environment:
      SWAGGER_JSON: /swagger/openapi.yaml
    volumes:
      - ./swagger:/swagger:z


  frontend:
    container_name: front
    image: evgeniyfimushkin/frontend
    build: ./frontend
    #ports:
    #  - "8080:8080"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "front|{{.Name}}|{{.ID}}"
    restart: always
  
  auth-service:
    container_name: auth-service
    image: evgeniyfimushkin/auth-service
    build: ./auth-service
    environment:
      - ENV=${ENV}
      - SERVER_PORT=8081
      - DB_NAME=auth_db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - PUBLIC_KEY=${PUBLIC_KEY}
    ports:
      - "8081:8081"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "auth-service|{{.Name}}|{{.ID}}"
    restart: always
 
  event-service:
    container_name: event-service
    image: evgeniyfimushkin/event-service
    build: ./event-service
    environment:
      - ENV=${ENV}
      - SERVER_PORT=8082
      - GRPC_SERVER_PORT=9091
      - DB_NAME=events_db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - PUBLIC_KEY=${PUBLIC_KEY}
    ports:
      - "9091:9091"
      - "8082:8082"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "event-service|{{.Name}}|{{.ID}}"
    restart: always

  registration-service:
    container_name: registration-service
    image: evgeniyfimushkin/registration-service
    build: ./registration-service
    environment:
      - ENV=${ENV}
      - GRPC_CLIENT_HOST=event-service
      - GRPC_CLIENT_PORT=9091
      - SERVER_PORT=8083
      - DB_NAME=registrations_db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - PUBLIC_KEY=${PUBLIC_KEY}
    ports:
      - "8083:8083"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "registration-service|{{.Name}}|{{.ID}}"
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:z
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "prometheus|{{.Name}}|{{.ID}}"
    restart: always


  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-provisioning:/etc/grafana/provisioning:z
      - grafana-data:/var/lib/grafana:z
    ports:
      - '3000:3000'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "grafana|{{.Name}}|{{.ID}}"
    restart: always

  loki:
    image: grafana/loki:latest
    container_name: loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "loki|{{.Name}}|{{.ID}}"
    restart: always


  promtail:
    user: root
    privileged: true
    container_name: promtail
    image: grafana/promtail:2.9.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail/promtail.yaml:/etc/promtail/promtail.yaml:z
    command: -config.file=/etc/promtail/promtail.yaml
    restart: always

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "node-exporter|{{.Name}}|{{.ID}}"
    restart: always




volumes:
  pg-events-data:
  grafana-provisioning:
  grafana-data:
