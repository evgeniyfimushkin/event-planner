openapi: 3.0.0
info:
  title: Auth API
  version: "1.0.0"
servers:
  - url: http://localhost:80
paths:

  /api/v1/auth/register:
    post:
      tags:
        - Auth
      summary: User registration
      description: Registers a new user and returns 200 on success.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "ivan"
                passhash:
                  type: string
                  example: "asdfnclhvkasdnflkhvasjdfl;jiqoiy84y"
                email:
                  type: string
                  example: "ivan@example.com"
              required:
                - username
                - passhash
                - email
      responses:
        '200':
          description: User registered successfully.
        '400':
          description: Registration error.
  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: User login
      description: Accepts username and passhash, returns a refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "ivan"
                passhash:
                  type: string
                  example: "asdfnclhvkasdnflkhvasjdfl;jiqoiy84y"
              required:
                - username
                - passhash
      responses:
        '200':
          description: Successful login, returns refresh token.
          headers:
            Set-Cookie:
              description: refresh_token
              schema:
                type: string
        '401':
          description: Invalid or expired refresh token.

  /api/v1/auth/refresh:
    get:
      tags:
        - Auth
      summary: Refresh access token
      description: Sends the refresh token via cookie and returns an access token in a cookie.
      parameters:
        - name: refresh_token
          in: cookie
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a new access token in a Set-Cookie header.
          headers:
            Set-Cookie:
              description: access_token
              schema:
                type: string
        '401':
          description: Invalid or expired refresh token.


  
